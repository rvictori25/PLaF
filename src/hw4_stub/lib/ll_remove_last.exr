
(* Example 1 *)

let l1 = { head <= 0; size <= 0} (* 0 in head signals null *)
in let add_front = proc (x) { proc (l) {
   	      begin
	         l.head <={ data <=x; next <= l.head };
		 l.size <= l.size+1
              end
	      } }
in letrec remove_last_helper(nd) = proc (key) {
                 if number?(nd.next)
		 then ((add_last_helper nd.next) key)
	         else return nd
	      } 
in let remove_last = proc (ll) { (remove_last_helper ll.head).data <= 0 }
in begin
     ((add_front 2) l1);
     ((add_front 3) l1);
     ((add_front 4) l1);
     (remove_last l1);
     debug(l1)  (* required inspect the list *)
   end